name: Deploy to EC2 via Docker Hub

on:
  push:
    branches:
      - main # 當程式碼推送到 main 分支時觸發此工作流程

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 虛擬機上運行此任務

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # 檢出 GitHub 儲存庫的程式碼

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: cokehuang/air_quality_monitor:latest # 您的 Docker Hub 用戶名/映像名稱:latest

    # 新增的步驟：複製 docker-compose.yml 到 EC2
    - name: Copy docker-compose.yml and .env to EC2
      uses: appleboy/scp-action@master # 使用 scp-action 進行檔案傳輸
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.yml,.env" # 這是源檔案在 GitHub 運行器上的路徑
        target: "~/air_quality_monitor/" # 這是目標路徑在 EC2 上的路徑

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master # 一個常用的 SSH Action，用於在遠端執行命令
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Connecting to EC2 and deploying..."
          cd ~/air_quality_monitor # 進入 EC2 上的專案目錄
          # 登入 Docker Hub (在 EC2 上，以便拉取私有映像，如果您的映像是私有的)
          # 注意：這裡的登入是為了 docker pull。如果您的映像檔是公開的，可以省略此步驟。
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          # 停止並移除舊的容器和相關資源 (重要！這會清理舊的 web 映像檔)
          docker-compose down --volumes --rmi all --remove-orphans # <--- 修正這裡！

          # 拉取最新的 Docker 映像 (現在 docker-compose.yml 指定了映像名稱)
          docker-compose pull # <--- 修正這裡！不再需要指定 web，因為 docker-compose.yml 已經有 image: 欄位
          
          # 啟動新的容器 (它會使用 docker-compose.yml 中指定的新映像)
          docker-compose up -d
          echo "Deployment complete."

          # 檢查服務狀態和日誌 (可選，但強烈建議在 CI/CD 執行後手動檢查)
          docker-compose ps
          docker-compose logs web # 不用 -f，因為工作流程會結束