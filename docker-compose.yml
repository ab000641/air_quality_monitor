services:
  db:
    image: postgres:16-alpine
    container_name: air_quality_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: air_quality_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  web:
    image: cokehuang/air_quality_monitor:latest
    container_name: air_quality_web
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      EPA_AQI_API_KEY: ${EPA_AQI_API_KEY}
      LINE_LOGIN_CHANNEL_ID: ${LINE_LOGIN_CHANNEL_ID}
      LINE_LOGIN_CHANNEL_SECRET: ${LINE_LOGIN_CHANNEL_SECRET}
      LINE_MESSAGING_CHANNEL_ACCESS_TOKEN: ${LINE_MESSAGING_CHANNEL_ACCESS_TOKEN}
      LINE_MESSAGING_CHANNEL_SECRET: ${LINE_MESSAGING_CHANNEL_SECRET}
      SECRET_KEY: ${SECRET_KEY}
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: gunicorn --bind 0.0.0.0:5001 app:app
    volumes:
      - ./app.py:/app/app.py
      - static_data:/app/static # üëà Êñ∞Â¢ûÔºöÂÖ±Áî®ÈùúÊÖãÊ™îÊ°à

  worker:
    image: cokehuang/air_quality_monitor:latest
    container_name: air_quality_worker
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      EPA_AQI_API_KEY: ${EPA_AQI_API_KEY}
      LINE_LOGIN_CHANNEL_ID: ${LINE_LOGIN_CHANNEL_ID}
      LINE_LOGIN_CHANNEL_SECRET: ${LINE_LOGIN_CHANNEL_SECRET}
      LINE_MESSAGING_CHANNEL_ACCESS_TOKEN: ${LINE_MESSAGING_CHANNEL_ACCESS_TOKEN}
      LINE_MESSAGING_CHANNEL_SECRET: ${LINE_MESSAGING_CHANNEL_SECRET}
      SECRET_KEY: ${SECRET_KEY}
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: rq worker aqi_queue
    volumes:
      - ./app.py:/app/app.py

  nginx:
    image: nginx:latest
    container_name: air_quality_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/air_quality_monitor.conf:/etc/nginx/conf.d/air_quality_monitor.conf:ro
      - /etc/letsencrypt/live/ab000641.site/fullchain.pem:/etc/nginx/ssl/live/ab000641.site/fullchain.pem:ro
      - /etc/letsencrypt/live/ab000641.site/privkey.pem:/etc/nginx/ssl/live/ab000641.site/privkey.pem:ro
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/nginx/ssl/options-ssl-nginx.conf:ro
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/nginx/ssl/ssl-dhparams.pem:ro
      - static_data:/usr/share/nginx/html/static:ro # üëà Êñ∞Â¢ûÔºöËÆÄÂèñÈùúÊÖãÊ™îÊ°à
    depends_on:
      web:
        condition: service_started
    command: /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  db_data:
  redis_data:
  static_data: # üëà Êñ∞Â¢ûÔºöÂÆöÁæ©ÈùúÊÖãÊ™îÊ°à volume